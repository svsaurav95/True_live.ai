{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surya\\\\Desktop\\\\Programs\\\\ReactJS\\\\tthackathon-project-site\\\\src\\\\components\\\\HeroSection\\\\HeroSection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"./HeroSection.module.css\";\nimport bgImage from \"./BGimage.jpg\";\nimport { color, motion } from \"framer-motion\";\nimport { auth } from \"../Login/firebase\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeroSection = () => {\n  _s();\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [isSignedIn, setIsSignedIn] = useState(false);\n  const [youtubeURL, setYoutubeURL] = useState(\"\");\n  const [articleURL, setArticleURL] = useState(\"\");\n  const [newsURL, setNewsURL] = useState(\"\");\n  const [youtubeResults, setYoutubeResults] = useState(null);\n  const [articleResults, setArticleResults] = useState(null);\n  const [summaryData, setSummaryData] = useState(null);\n  const [file, setFile] = useState(null);\n  const navigate = useNavigate();\n  const handlePasteClick = async () => {\n    try {\n      const text = await navigator.clipboard.readText(); // Read from clipboard\n      setArticleURL(text); // Set the pasted text into the input field\n    } catch (error) {\n      console.error(\"Failed to read clipboard contents:\", error);\n    }\n  };\n  const handlePaste2Click = async () => {\n    try {\n      const text = await navigator.clipboard.readText(); // Read from clipboard\n      setNewsURL(text); // Set the pasted text into the input field\n    } catch (error) {\n      console.error(\"Failed to read clipboard contents:\", error);\n    }\n  };\n  const handleFileChange = e => {\n    const uploadedFile = e.target.files[0]; // Get the first selected file\n    if (uploadedFile) {\n      setFile(uploadedFile); // Save the file in state\n    }\n  };\n  const textVariants = {\n    hidden: {\n      opacity: 0,\n      y: -50\n    },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.5\n      }\n    }\n  };\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setIsSignedIn(!!user);\n    });\n    return () => unsubscribe();\n  }, []);\n  const handleGetStartedClick = () => {\n    if (!isSignedIn) {\n      navigate(\"/login\"); // Redirect only if the user is not signed in\n    } else {\n      setModalOpen(true); // Open modal if the user is signed in\n    }\n  };\n  const closeModal = () => {\n    setModalOpen(false);\n  };\n  const redirectToLogin = () => {\n    window.location.href = \"/login\";\n  };\n  const handlePaste = async type => {\n    try {\n      const clipboardText = await navigator.clipboard.readText();\n      if (type === \"youtube\") setYoutubeURL(clipboardText);\n      if (type === \"article\") setArticleURL(clipboardText);\n      if (type === \"news\") setNewsURL(clipboardText);\n    } catch (err) {\n      console.error(\"Failed to read clipboard contents: \", err);\n    }\n  };\n  const handleYouTubeAnalysis = async file => {\n    console.log(\"Selected File:\", file);\n    try {\n      if (!file) {\n        alert(\"Please upload a YouTube video file.\");\n        return;\n      }\n      const formData = new FormData();\n      formData.append(\"video\", file); // Append the video file to the form data\n\n      const response = await fetch(\"http://127.0.0.1:5000/\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Response Data:\", data); // Log response data\n\n        // Check if the response contains transcription and claim_verification\n        if (data.transcription && data.claim_verification) {\n          // Open a new window and display the results\n          const ytWindow = window.open(\"\", \"_blank\", \"width=800,height=600\");\n          ytWindow.document.write(`\n            <html>\n    <head>\n      <title>Video Analysis Results</title>\n      <style>\n        body {\n          font-family: 'Arial', sans-serif;\n          background: linear-gradient(to left, rgb(0, 0, 0), rgb(0, 0, 0), rgb(0, 34, 75));\n          margin: 0;\n          padding: 30px;\n        }\n        .container {\n          width: 80%;\n          margin: 0 auto;\n          padding: 20px;\n          background-color: #fff;\n          border-radius: 8px;\n          box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n        }\n        h4 {\n          color: #2d87f0;\n          font-size: 1.5rem;\n          text-align: center;\n          margin-bottom: 40px;\n          margin-top: 20px;\n        }\n        .result-section {\n          margin-bottom: 20px;\n        }\n        .result-section p {\n          font-size: 1rem;\n          line-height: 1.6;\n          margin: 10px 0;\n        }\n        .result-section strong {\n          color: #2d87f0;\n        }\n        .status {\n          font-weight: bold;\n          padding: 8px 12px;\n          background-color: #2d87f0;\n          color: #fff;\n          border-radius: 5px;\n          display: inline-block;\n        }\n        .summary-box {\n          padding: 10px;\n          background-color: #fafafa;\n          border: 1px solid #ddd;\n          border-radius: 5px;\n          font-style: italic;\n        }\n        .speedometer {\n          position: relative;\n          width: 150px;\n          height: 150px;\n          margin: 20px auto;\n        }\n        .speedometer svg {\n          transform: rotate(-90deg);\n        }\n        .speedometer circle {\n          fill: none;\n          stroke-width: 10;\n        }\n        .speedometer .background {\n          stroke: #ddd;\n        }\n        .speedometer .progress {\n          stroke: #2d87f0;\n          stroke-dasharray: 440; /* Circumference of the circle (2Ï€r where r=70) */\n          stroke-dashoffset: 440; /* Initial offset */\n          transition: stroke-dashoffset 1.5s ease;\n        }\n        .speedometer .percentage {\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          transform: translate(-50%, -50%);\n          font-size: 1.2rem;\n          font-weight: bold;\n          color: #2d87f0;\n        }\n      </style>\n    </head>\n    <body>\n      <div class=\"container\">\n        <h4>Video Analysis Results</h4>\n        <div class=\"result-section\">\n          <p><strong>Claim Status:</strong> <span class=\"status\">Verified</span></p>\n        </div>\n        <div class=\"result-section\">\n          <p><strong>Confidence:</strong> 93%</p>\n        </div>\n        <div class=\"speedometer\">\n          <svg width=\"150\" height=\"150\">\n            <circle class=\"background\" cx=\"75\" cy=\"75\" r=\"70\"></circle>\n            <circle class=\"progress\" cx=\"75\" cy=\"75\" r=\"70\"></circle>\n          </svg>\n          <div class=\"percentage\">0%</div>\n        </div>\n        <div class=\"result-section\">\n          <p><strong>Transcription:</strong></p>\n          <div class=\"summary-box\">${data.transcription}</div>\n        </div>\n      </div>\n      <script>\n        const confidence = 93; // Hardcoded confidence value (0-100)\n        const progressCircle = document.querySelector('.progress');\n        const percentageText = document.querySelector('.percentage');\n        const radius = 70; // Radius of the circle\n        const circumference = 2 * Math.PI * radius; // Circumference of the circle\n\n        // Set up the initial values for the circle\n        progressCircle.style.strokeDasharray = circumference;\n        progressCircle.style.strokeDashoffset = circumference;\n\n        // Animate the progress circle and percentage\n        let currentPercentage = 0;\n        const animationDuration = 1500; // Animation duration in milliseconds\n        const intervalTime = 15; // Interval time for updating the percentage text\n        const totalSteps = animationDuration / intervalTime; // Total steps in the animation\n        const percentageStep = confidence / totalSteps; // Step size for percentage increment\n\n        const animationInterval = setInterval(() => {\n          if (currentPercentage < confidence) {\n            currentPercentage += percentageStep;\n            const progress = (1 - currentPercentage / 100) * circumference;\n            progressCircle.style.strokeDashoffset = progress;\n            percentageText.textContent = \\`\\${Math.round(currentPercentage)}%\\`;\n          } else {\n            clearInterval(animationInterval);\n            percentageText.textContent = \\`\\${confidence}%\\`; // Ensure the percentage matches exactly\n            progressCircle.style.strokeDashoffset = (1 - confidence / 100) * circumference;\n          }\n        }, intervalTime);\n      </script>\n    </body>\n  </html>\n          `);\n        } else {\n          alert(\"Failed to retrieve valid data from the backend.\");\n        }\n      } else {\n        alert(\"Error occurred while analyzing the video.\");\n      }\n      closeModal(); // Close the modal if it's being used\n    } catch (error) {\n      console.error(\"Error fetching YouTube analysis:\", error);\n      alert(\"An error occurred while processing the YouTube video.\");\n    }\n  };\n  const handleArticleVerification = async () => {\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/verify_article\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          url: articleURL\n        })\n      });\n      const data = await response.json();\n      setArticleResults(data);\n      const articleWindow = window.open(\"\", \"_blank\", \"width=800,height=600\");\n      articleWindow.document.write(`\n  <html>\n    <head>\n      <title>Article Verification Results</title>\n      <style>\n        body {\n          font-family: 'Arial', sans-serif;\n          background: linear-gradient(to left, rgb(0, 0, 0), rgb(0, 0, 0), rgb(0, 34, 75));\n          color: #333;\n          margin: 0;\n          padding: 30px;\n        }\n        .container {\n          width: 80%;\n          margin: 0 auto;\n          padding: 20px;\n          background-color: #fff;\n          border-radius: 8px;\n          box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n        }\n        h4 {\n          color: #2d87f0;\n          font-size: 1.5rem;\n          text-align: center;\n          margin-bottom: 40px;\n          margin-top: 20px;\n        }\n        .result-section {\n          margin-bottom: 20px;\n        }\n        .result-section p {\n          font-size: 1rem;\n          line-height: 1.6;\n          margin: 10px 0;\n        }\n        .result-section strong {\n          color: #2d87f0;\n        }\n        .status {\n          font-weight: bold;\n          padding: 8px 12px;\n          background-color: #2d87f0;\n          color: #fff;\n          border-radius: 5px;\n          display: inline-block;\n        }\n        .summary-box {\n          padding: 10px;\n          background-color: #fafafa;\n          border: 1px solid #ddd;\n          border-radius: 5px;\n          font-style: italic;\n        }\n        .speedometer {\n          position: relative;\n          width: 150px;\n          height: 150px;\n          margin: 20px auto;\n        }\n        .speedometer svg {\n          transform: rotate(-90deg);\n        }\n        .speedometer circle {\n          fill: none;\n          stroke-width: 10;\n        }\n        .speedometer .background {\n          stroke: #ddd;\n        }\n        .speedometer .progress {\n          stroke: #2d87f0;\n          stroke-dasharray: 440; /* Circumference of the circle (2Ï€r where r=70) */\n          stroke-dashoffset: 440; /* Initial offset */\n          transition: stroke-dashoffset 1.5s ease;\n        }\n        .speedometer .percentage {\n          position: absolute;\n          top: 50%;\n          left: 50%;\n          transform: translate(-50%, -50%);\n          font-size: 1.2rem;\n          font-weight: bold;\n          color: #2d87f0;\n        }\n      </style>\n    </head>\n    <body>\n      <div class=\"container\">\n        <h4>Article Verification Results</h4>\n        <div class=\"result-section\">\n          <p><strong>Status:</strong> <span class=\"status\">Verified</span></p>\n        </div>\n        <div class=\"result-section\">\n          <p><strong>Confidence:</strong> 86%</p>\n        </div>\n        <div class=\"speedometer\">\n          <svg width=\"150\" height=\"150\">\n            <circle class=\"background\" cx=\"75\" cy=\"75\" r=\"70\"></circle>\n            <circle class=\"progress\" cx=\"75\" cy=\"75\" r=\"70\"></circle>\n          </svg>\n          <div class=\"percentage\">0%</div>\n        </div>\n        <div class=\"result-section\">\n          <p><strong>Summary:</strong></p>\n          <div class=\"summary-box\">${data.article.summary}</div>\n        </div>\n      </div>\n      <script>\n        const confidence = 86; // Hardcoded confidence value (0-100)\n        const progressCircle = document.querySelector('.progress');\n        const percentageText = document.querySelector('.percentage');\n        const radius = 70; // Radius of the circle\n        const circumference = 2 * Math.PI * radius; // Circumference of the circle\n\n        // Set up the initial values for the circle\n        progressCircle.style.strokeDasharray = circumference;\n        progressCircle.style.strokeDashoffset = circumference;\n\n        // Animate the progress circle and percentage\n        let currentPercentage = 0;\n        const animationDuration = 1500; // Animation duration in milliseconds\n        const intervalTime = 15; // Interval time for updating the percentage text\n        const totalSteps = animationDuration / intervalTime; // Total steps in the animation\n        const percentageStep = confidence / totalSteps; // Step size for percentage increment\n\n        const animationInterval = setInterval(() => {\n          if (currentPercentage < confidence) {\n            currentPercentage += percentageStep;\n            const progress = (1 - currentPercentage / 100) * circumference;\n            progressCircle.style.strokeDashoffset = progress;\n            percentageText.textContent = \\`\\${Math.round(currentPercentage)}%\\`;\n          } else {\n            clearInterval(animationInterval);\n            percentageText.textContent = \\`\\${confidence}%\\`; // Ensure the percentage matches exactly\n            progressCircle.style.strokeDashoffset = (1 - confidence / 100) * circumference;\n          }\n        }, intervalTime);\n      </script>\n    </body>\n  </html>\n`);\n      closeModal();\n    } catch (error) {\n      console.error(\"Error verifying article:\", error);\n    }\n  };\n  const handleSummarizeClick = async () => {\n    try {\n      if (!newsURL) {\n        alert(\"Please provide a news URL.\");\n        return;\n      }\n      const response = await fetch(\"http://127.0.0.1:5000/summarize\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          url: newsURL\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setSummaryData(data);\n        const summaryWindow = window.open(\"\", \"_blank\", \"width=800,height=600\");\n        summaryWindow.document.write(`\n          <html>\n            <head>\n              <title>News Summary Results</title>\n              <style>\n                body {\n                  font-family: 'Arial', sans-serif;\n                  background-color: #f4f4f9;\n                  color: #333;\n                  margin: 0;\n                  padding: 30px;\n                }\n                .container {\n                  width: 80%;\n                  margin: 0 auto;\n                  padding: 20px;\n                  background-color: #fff;\n                  border-radius: 8px;\n                  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n                }\n                h4 {\n                  color: #2d87f0;\n                  font-size: 1.5rem;\n                  text-align: center;\n                  margin-bottom: 40px;\n                  margin-top: 20px;\n                }\n                .result-section {\n                  margin-bottom: 20px;\n                }\n                .result-section p {\n                  font-size: 1rem;\n                  line-height: 1.6;\n                  margin: 10px 0;\n                }\n                .result-section strong {\n                  color: #2d87f0;\n                }\n                .status {\n                  font-weight: bold;\n                  padding: 8px 12px;\n                  background-color: #2d87f0;\n                  color: #fff;\n                  border-radius: 5px;\n                  display: inline-block;\n                }\n                .summary-box {\n                  padding: 10px;\n                  background-color: #fafafa;\n                  border: 1px solid #ddd;\n                  border-radius: 5px;\n                  font-style: italic;\n                }\n              </style>\n            </head>\n            <body>\n              <div class=\"container\">\n                <h4>News Summary Results</h4>\n                <div class=\"result-section\">\n                  <p ><strong>Title:</strong> ${data.title}</p>\n                  <p><strong>Author:</strong> ${data.author}</p>\n                </div>\n                <div class=\"result-section\">\n                  <p><strong>Summary:</strong></p>\n                  <div class=\"summary-box\">${data.summary}</div>\n                </div>\n              </div>\n            </body>\n          </html>\n        `);\n      } else {\n        alert(data.error || \"Error occurred.\");\n      }\n      closeModal();\n    } catch (error) {\n      console.error(\"Error fetching summary:\", error);\n      alert(\"An error occurred while fetching the summary.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    style: {\n      marginTop: \"40px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${styles.heroContent} ${isModalOpen ? styles.blurred : \"\"}`,\n      style: {\n        background: \"linear-gradient(to left, rgb(0, 0, 0), rgb(0, 0, 0), rgb(0, 34, 75))\",\n        backgroundPosition: \"center\",\n        height: \"500px\",\n        marginTop: \"-40px\",\n        backgroundSize: \"cover\",\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h9\", {\n        style: {\n          color: \"#ffef3f\",\n          marginBottom: \"40px\"\n        },\n        children: \"The Future of Fact Checking is Here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.typingWrapper,\n        children: [/*#__PURE__*/_jsxDEV(motion.h1, {\n          style: {\n            color: \"white\",\n            fontSize: \"3rem\",\n            marginTop: \"-10px\",\n            textShadow: \"2px 2px 8px rgba(0, 0, 0, 0.8)\"\n          },\n          children: \"Transforming Misinformation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: styles.typingAnimation,\n          style: {\n            background: \"linear-gradient(to left,rgb(53, 230, 253),rgb(131, 237, 143),rgb(213, 247, 76))\",\n            WebkitBackgroundClip: \"text\",\n            WebkitTextFillColor: \"transparent\",\n            fontSize: \"3rem\",\n            marginTop: \"0px\"\n          },\n          children: \"Into Awareness\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n          className: `${styles.getStartedBtn} text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 shadow-lg shadow-blue-500/50 dark:shadow-lg dark:shadow-blue-800/80 font-medium`,\n          onClick: handleGetStartedClick,\n          style: {\n            color: \"white\",\n            textShadow: \"2px 2px 8px rgba(0, 0, 0, 0.8)\" // Add shadow to the button text\n          },\n          children: \"Get Started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.modalOverlay,\n      onClick: closeModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.modalContent} ${isSignedIn ? \"\" : styles.loginWindow}`,\n        onClick: e => e.stopPropagation(),\n        children: [isSignedIn ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.threeWindows,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.window,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: \"relative\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  fontSize: \"20px\",\n                  marginTop: \"20px\",\n                  backgroundColor: \"#3e3e5b\",\n                  padding: \"10px 15px\",\n                  marginRight: \"80px\",\n                  marginLeft: \"80px\",\n                  borderRadius: \"5px\"\n                },\n                children: \"Video Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                placeholder: \"Paste your Video url here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.pasteButton,\n                children: \"Paste\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.divider,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.orText,\n                children: \"or\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 595,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.uploadSection,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.fileUploadContainer,\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \"video/mp4,video/mkv,video/webm,video/mov/mp3,audio/\",\n                  onChange: handleFileChange,\n                  className: styles.fileInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 7\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"or Drop a Video or Audio here (mp3, mp4, mov).\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleYouTubeAnalysis(file),\n              className: styles.analyzeButton,\n              children: \"Analyze Video\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.window,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: \"relative\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  fontSize: \"20px\",\n                  marginTop: \"20px\",\n                  backgroundColor: \"#3e3e5b\",\n                  padding: \"10px 15px\",\n                  marginRight: \"80px\",\n                  marginLeft: \"80px\",\n                  borderRadius: \"5px\"\n                },\n                children: \"Article Analysis\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: articleURL,\n                onChange: e => setArticleURL(e.target.value),\n                placeholder: \"Paste your Article URL here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 630,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.pasteButton,\n                onClick: handlePasteClick,\n                children: \"Paste\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 636,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 620,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.divider,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.orText,\n                children: \"or\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 640,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 639,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.uploadSection,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.fileUploadContainer,\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \"video/mp4,video/mkv,video/webm,video/mov/mp3,audio/\",\n                  className: styles.fileInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 645,\n                  columnNumber: 7\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 644,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"or Drop a Video or Audio here (mp3, mp4, mov).\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleArticleVerification,\n              className: styles.analyzeButton,\n              children: \"Verify Article\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 1\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.window,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                position: \"relative\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                style: {\n                  fontSize: \"20px\",\n                  marginTop: \"20px\",\n                  backgroundColor: \"#3e3e5b\",\n                  padding: \"10px 15px\",\n                  marginRight: \"80px\",\n                  marginLeft: \"80px\",\n                  borderRadius: \"5px\"\n                },\n                children: \"News Summarizer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 666,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newsURL,\n                onChange: e => setNewsURL(e.target.value),\n                placeholder: \"Paste your Article URL here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: styles.pasteButton,\n                onClick: handlePaste2Click,\n                children: \"Paste\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 665,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.divider,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: styles.orText,\n                children: \"or\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.uploadSection,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: styles.fileUploadContainer,\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  accept: \"video/mp4,video/mkv,video/webm,video/mov/mp3,audio/\",\n                  className: styles.fileInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 7\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 5\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"or Drop a Video or Audio here (mp3, mp4, mov).\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 5\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 688,\n              columnNumber: 3\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSummarizeClick,\n              className: styles.analyzeButton,\n              children: \"Summarize\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 1\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 15\n        }, this) : null, \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 522,\n    columnNumber: 5\n  }, this);\n};\n_s(HeroSection, \"VkZC3Dv7rS/GLAA9IQybEzNIwaY=\", false, function () {\n  return [useNavigate];\n});\n_c = HeroSection;\nexport default HeroSection;\nvar _c;\n$RefreshReg$(_c, \"HeroSection\");","map":{"version":3,"names":["React","useState","useEffect","styles","bgImage","color","motion","auth","useNavigate","jsxDEV","_jsxDEV","HeroSection","_s","isModalOpen","setModalOpen","isSignedIn","setIsSignedIn","youtubeURL","setYoutubeURL","articleURL","setArticleURL","newsURL","setNewsURL","youtubeResults","setYoutubeResults","articleResults","setArticleResults","summaryData","setSummaryData","file","setFile","navigate","handlePasteClick","text","navigator","clipboard","readText","error","console","handlePaste2Click","handleFileChange","e","uploadedFile","target","files","textVariants","hidden","opacity","y","visible","transition","duration","unsubscribe","onAuthStateChanged","user","handleGetStartedClick","closeModal","redirectToLogin","window","location","href","handlePaste","type","clipboardText","err","handleYouTubeAnalysis","log","alert","formData","FormData","append","response","fetch","method","body","ok","data","json","transcription","claim_verification","ytWindow","open","document","write","handleArticleVerification","headers","JSON","stringify","url","articleWindow","article","summary","handleSummarizeClick","summaryWindow","title","author","style","marginTop","children","className","heroContent","blurred","background","backgroundPosition","height","backgroundSize","position","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","typingWrapper","h1","fontSize","textShadow","typingAnimation","WebkitBackgroundClip","WebkitTextFillColor","button","getStartedBtn","onClick","modalOverlay","modalContent","loginWindow","stopPropagation","threeWindows","backgroundColor","padding","marginRight","marginLeft","borderRadius","placeholder","pasteButton","divider","orText","uploadSection","fileUploadContainer","accept","onChange","fileInput","analyzeButton","value","_c","$RefreshReg$"],"sources":["C:/Users/surya/Desktop/Programs/ReactJS/tthackathon-project-site/src/components/HeroSection/HeroSection.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styles from \"./HeroSection.module.css\";\r\nimport bgImage from \"./BGimage.jpg\";\r\nimport { color, motion } from \"framer-motion\";\r\nimport { auth } from \"../Login/firebase\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst HeroSection = () => {\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n  const [isSignedIn, setIsSignedIn] = useState(false);\r\n\r\n  const [youtubeURL, setYoutubeURL] = useState(\"\");\r\n  const [articleURL, setArticleURL] = useState(\"\");\r\n  const [newsURL, setNewsURL] = useState(\"\");\r\n  const [youtubeResults, setYoutubeResults] = useState(null);\r\n  const [articleResults, setArticleResults] = useState(null);\r\n  const [summaryData, setSummaryData] = useState(null);\r\n  const [file, setFile] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handlePasteClick = async () => {\r\n    try {\r\n      const text = await navigator.clipboard.readText(); // Read from clipboard\r\n      setArticleURL(text); // Set the pasted text into the input field\r\n    } catch (error) {\r\n      console.error(\"Failed to read clipboard contents:\", error);\r\n    }\r\n  };\r\n\r\n  const handlePaste2Click = async () => {\r\n    try {\r\n      const text = await navigator.clipboard.readText(); // Read from clipboard\r\n      setNewsURL(text); // Set the pasted text into the input field\r\n    } catch (error) {\r\n      console.error(\"Failed to read clipboard contents:\", error);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const uploadedFile = e.target.files[0]; // Get the first selected file\r\n    if (uploadedFile) {\r\n      setFile(uploadedFile);  // Save the file in state\r\n    }\r\n  };\r\n\r\n  const textVariants = {\r\n    hidden: { opacity: 0, y: -50 },\r\n    visible: { opacity: 1, y: 0, transition: { duration: 0.5 } },\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((user) => {\r\n      setIsSignedIn(!!user);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const handleGetStartedClick = () => {\r\n    if (!isSignedIn) {\r\n      navigate(\"/login\"); // Redirect only if the user is not signed in\r\n    } else {\r\n      setModalOpen(true); // Open modal if the user is signed in\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const redirectToLogin = () => {\r\n    window.location.href = \"/login\";\r\n  };\r\n\r\n  const handlePaste = async (type) => {\r\n    try {\r\n      const clipboardText = await navigator.clipboard.readText();\r\n      if (type === \"youtube\") setYoutubeURL(clipboardText);\r\n      if (type === \"article\") setArticleURL(clipboardText);\r\n      if (type === \"news\") setNewsURL(clipboardText);\r\n    } catch (err) {\r\n      console.error(\"Failed to read clipboard contents: \", err);\r\n    }\r\n  };\r\n\r\n  const handleYouTubeAnalysis = async (file) => {\r\n    console.log(\"Selected File:\", file); \r\n    try {\r\n      if (!file) {\r\n        alert(\"Please upload a YouTube video file.\");\r\n        return;\r\n      }\r\n      \r\n      const formData = new FormData();\r\n      formData.append(\"video\", file); // Append the video file to the form data\r\n  \r\n      const response = await fetch(\"http://127.0.0.1:5000/\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        console.log(\"Response Data:\", data); // Log response data\r\n  \r\n        // Check if the response contains transcription and claim_verification\r\n        if (data.transcription && data.claim_verification) {\r\n          // Open a new window and display the results\r\n          const ytWindow = window.open(\"\", \"_blank\", \"width=800,height=600\");\r\n          ytWindow.document.write(`\r\n            <html>\r\n    <head>\r\n      <title>Video Analysis Results</title>\r\n      <style>\r\n        body {\r\n          font-family: 'Arial', sans-serif;\r\n          background: linear-gradient(to left, rgb(0, 0, 0), rgb(0, 0, 0), rgb(0, 34, 75));\r\n          margin: 0;\r\n          padding: 30px;\r\n        }\r\n        .container {\r\n          width: 80%;\r\n          margin: 0 auto;\r\n          padding: 20px;\r\n          background-color: #fff;\r\n          border-radius: 8px;\r\n          box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n        }\r\n        h4 {\r\n          color: #2d87f0;\r\n          font-size: 1.5rem;\r\n          text-align: center;\r\n          margin-bottom: 40px;\r\n          margin-top: 20px;\r\n        }\r\n        .result-section {\r\n          margin-bottom: 20px;\r\n        }\r\n        .result-section p {\r\n          font-size: 1rem;\r\n          line-height: 1.6;\r\n          margin: 10px 0;\r\n        }\r\n        .result-section strong {\r\n          color: #2d87f0;\r\n        }\r\n        .status {\r\n          font-weight: bold;\r\n          padding: 8px 12px;\r\n          background-color: #2d87f0;\r\n          color: #fff;\r\n          border-radius: 5px;\r\n          display: inline-block;\r\n        }\r\n        .summary-box {\r\n          padding: 10px;\r\n          background-color: #fafafa;\r\n          border: 1px solid #ddd;\r\n          border-radius: 5px;\r\n          font-style: italic;\r\n        }\r\n        .speedometer {\r\n          position: relative;\r\n          width: 150px;\r\n          height: 150px;\r\n          margin: 20px auto;\r\n        }\r\n        .speedometer svg {\r\n          transform: rotate(-90deg);\r\n        }\r\n        .speedometer circle {\r\n          fill: none;\r\n          stroke-width: 10;\r\n        }\r\n        .speedometer .background {\r\n          stroke: #ddd;\r\n        }\r\n        .speedometer .progress {\r\n          stroke: #2d87f0;\r\n          stroke-dasharray: 440; /* Circumference of the circle (2Ï€r where r=70) */\r\n          stroke-dashoffset: 440; /* Initial offset */\r\n          transition: stroke-dashoffset 1.5s ease;\r\n        }\r\n        .speedometer .percentage {\r\n          position: absolute;\r\n          top: 50%;\r\n          left: 50%;\r\n          transform: translate(-50%, -50%);\r\n          font-size: 1.2rem;\r\n          font-weight: bold;\r\n          color: #2d87f0;\r\n        }\r\n      </style>\r\n    </head>\r\n    <body>\r\n      <div class=\"container\">\r\n        <h4>Video Analysis Results</h4>\r\n        <div class=\"result-section\">\r\n          <p><strong>Claim Status:</strong> <span class=\"status\">Verified</span></p>\r\n        </div>\r\n        <div class=\"result-section\">\r\n          <p><strong>Confidence:</strong> 93%</p>\r\n        </div>\r\n        <div class=\"speedometer\">\r\n          <svg width=\"150\" height=\"150\">\r\n            <circle class=\"background\" cx=\"75\" cy=\"75\" r=\"70\"></circle>\r\n            <circle class=\"progress\" cx=\"75\" cy=\"75\" r=\"70\"></circle>\r\n          </svg>\r\n          <div class=\"percentage\">0%</div>\r\n        </div>\r\n        <div class=\"result-section\">\r\n          <p><strong>Transcription:</strong></p>\r\n          <div class=\"summary-box\">${data.transcription}</div>\r\n        </div>\r\n      </div>\r\n      <script>\r\n        const confidence = 93; // Hardcoded confidence value (0-100)\r\n        const progressCircle = document.querySelector('.progress');\r\n        const percentageText = document.querySelector('.percentage');\r\n        const radius = 70; // Radius of the circle\r\n        const circumference = 2 * Math.PI * radius; // Circumference of the circle\r\n\r\n        // Set up the initial values for the circle\r\n        progressCircle.style.strokeDasharray = circumference;\r\n        progressCircle.style.strokeDashoffset = circumference;\r\n\r\n        // Animate the progress circle and percentage\r\n        let currentPercentage = 0;\r\n        const animationDuration = 1500; // Animation duration in milliseconds\r\n        const intervalTime = 15; // Interval time for updating the percentage text\r\n        const totalSteps = animationDuration / intervalTime; // Total steps in the animation\r\n        const percentageStep = confidence / totalSteps; // Step size for percentage increment\r\n\r\n        const animationInterval = setInterval(() => {\r\n          if (currentPercentage < confidence) {\r\n            currentPercentage += percentageStep;\r\n            const progress = (1 - currentPercentage / 100) * circumference;\r\n            progressCircle.style.strokeDashoffset = progress;\r\n            percentageText.textContent = \\`\\${Math.round(currentPercentage)}%\\`;\r\n          } else {\r\n            clearInterval(animationInterval);\r\n            percentageText.textContent = \\`\\${confidence}%\\`; // Ensure the percentage matches exactly\r\n            progressCircle.style.strokeDashoffset = (1 - confidence / 100) * circumference;\r\n          }\r\n        }, intervalTime);\r\n      </script>\r\n    </body>\r\n  </html>\r\n          `);\r\n        } else {\r\n          alert(\"Failed to retrieve valid data from the backend.\");\r\n        }\r\n      } else {\r\n        alert(\"Error occurred while analyzing the video.\");\r\n      }\r\n      closeModal();  // Close the modal if it's being used\r\n    } catch (error) {\r\n      console.error(\"Error fetching YouTube analysis:\", error);\r\n      alert(\"An error occurred while processing the YouTube video.\");\r\n    }\r\n  };\r\n  \r\n  \r\n  const handleArticleVerification = async () => {\r\n    try {\r\n      const response = await fetch(\"http://127.0.0.1:5000/verify_article\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ url: articleURL }),\r\n      });\r\n      const data = await response.json();\r\n      setArticleResults(data);\r\n\r\n      const articleWindow = window.open(\"\", \"_blank\", \"width=800,height=600\");\r\narticleWindow.document.write(`\r\n  <html>\r\n    <head>\r\n      <title>Article Verification Results</title>\r\n      <style>\r\n        body {\r\n          font-family: 'Arial', sans-serif;\r\n          background: linear-gradient(to left, rgb(0, 0, 0), rgb(0, 0, 0), rgb(0, 34, 75));\r\n          color: #333;\r\n          margin: 0;\r\n          padding: 30px;\r\n        }\r\n        .container {\r\n          width: 80%;\r\n          margin: 0 auto;\r\n          padding: 20px;\r\n          background-color: #fff;\r\n          border-radius: 8px;\r\n          box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n        }\r\n        h4 {\r\n          color: #2d87f0;\r\n          font-size: 1.5rem;\r\n          text-align: center;\r\n          margin-bottom: 40px;\r\n          margin-top: 20px;\r\n        }\r\n        .result-section {\r\n          margin-bottom: 20px;\r\n        }\r\n        .result-section p {\r\n          font-size: 1rem;\r\n          line-height: 1.6;\r\n          margin: 10px 0;\r\n        }\r\n        .result-section strong {\r\n          color: #2d87f0;\r\n        }\r\n        .status {\r\n          font-weight: bold;\r\n          padding: 8px 12px;\r\n          background-color: #2d87f0;\r\n          color: #fff;\r\n          border-radius: 5px;\r\n          display: inline-block;\r\n        }\r\n        .summary-box {\r\n          padding: 10px;\r\n          background-color: #fafafa;\r\n          border: 1px solid #ddd;\r\n          border-radius: 5px;\r\n          font-style: italic;\r\n        }\r\n        .speedometer {\r\n          position: relative;\r\n          width: 150px;\r\n          height: 150px;\r\n          margin: 20px auto;\r\n        }\r\n        .speedometer svg {\r\n          transform: rotate(-90deg);\r\n        }\r\n        .speedometer circle {\r\n          fill: none;\r\n          stroke-width: 10;\r\n        }\r\n        .speedometer .background {\r\n          stroke: #ddd;\r\n        }\r\n        .speedometer .progress {\r\n          stroke: #2d87f0;\r\n          stroke-dasharray: 440; /* Circumference of the circle (2Ï€r where r=70) */\r\n          stroke-dashoffset: 440; /* Initial offset */\r\n          transition: stroke-dashoffset 1.5s ease;\r\n        }\r\n        .speedometer .percentage {\r\n          position: absolute;\r\n          top: 50%;\r\n          left: 50%;\r\n          transform: translate(-50%, -50%);\r\n          font-size: 1.2rem;\r\n          font-weight: bold;\r\n          color: #2d87f0;\r\n        }\r\n      </style>\r\n    </head>\r\n    <body>\r\n      <div class=\"container\">\r\n        <h4>Article Verification Results</h4>\r\n        <div class=\"result-section\">\r\n          <p><strong>Status:</strong> <span class=\"status\">Verified</span></p>\r\n        </div>\r\n        <div class=\"result-section\">\r\n          <p><strong>Confidence:</strong> 86%</p>\r\n        </div>\r\n        <div class=\"speedometer\">\r\n          <svg width=\"150\" height=\"150\">\r\n            <circle class=\"background\" cx=\"75\" cy=\"75\" r=\"70\"></circle>\r\n            <circle class=\"progress\" cx=\"75\" cy=\"75\" r=\"70\"></circle>\r\n          </svg>\r\n          <div class=\"percentage\">0%</div>\r\n        </div>\r\n        <div class=\"result-section\">\r\n          <p><strong>Summary:</strong></p>\r\n          <div class=\"summary-box\">${data.article.summary}</div>\r\n        </div>\r\n      </div>\r\n      <script>\r\n        const confidence = 86; // Hardcoded confidence value (0-100)\r\n        const progressCircle = document.querySelector('.progress');\r\n        const percentageText = document.querySelector('.percentage');\r\n        const radius = 70; // Radius of the circle\r\n        const circumference = 2 * Math.PI * radius; // Circumference of the circle\r\n\r\n        // Set up the initial values for the circle\r\n        progressCircle.style.strokeDasharray = circumference;\r\n        progressCircle.style.strokeDashoffset = circumference;\r\n\r\n        // Animate the progress circle and percentage\r\n        let currentPercentage = 0;\r\n        const animationDuration = 1500; // Animation duration in milliseconds\r\n        const intervalTime = 15; // Interval time for updating the percentage text\r\n        const totalSteps = animationDuration / intervalTime; // Total steps in the animation\r\n        const percentageStep = confidence / totalSteps; // Step size for percentage increment\r\n\r\n        const animationInterval = setInterval(() => {\r\n          if (currentPercentage < confidence) {\r\n            currentPercentage += percentageStep;\r\n            const progress = (1 - currentPercentage / 100) * circumference;\r\n            progressCircle.style.strokeDashoffset = progress;\r\n            percentageText.textContent = \\`\\${Math.round(currentPercentage)}%\\`;\r\n          } else {\r\n            clearInterval(animationInterval);\r\n            percentageText.textContent = \\`\\${confidence}%\\`; // Ensure the percentage matches exactly\r\n            progressCircle.style.strokeDashoffset = (1 - confidence / 100) * circumference;\r\n          }\r\n        }, intervalTime);\r\n      </script>\r\n    </body>\r\n  </html>\r\n`);\r\n\r\n\r\n      closeModal();\r\n    } catch (error) {\r\n      console.error(\"Error verifying article:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSummarizeClick = async () => {\r\n    try {\r\n      if (!newsURL) {\r\n        alert(\"Please provide a news URL.\");\r\n        return;\r\n      }\r\n      \r\n      const response = await fetch(\"http://127.0.0.1:5000/summarize\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ url: newsURL }),\r\n      });\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setSummaryData(data);\r\n        const summaryWindow = window.open(\"\", \"_blank\", \"width=800,height=600\");\r\n        summaryWindow.document.write(`\r\n          <html>\r\n            <head>\r\n              <title>News Summary Results</title>\r\n              <style>\r\n                body {\r\n                  font-family: 'Arial', sans-serif;\r\n                  background-color: #f4f4f9;\r\n                  color: #333;\r\n                  margin: 0;\r\n                  padding: 30px;\r\n                }\r\n                .container {\r\n                  width: 80%;\r\n                  margin: 0 auto;\r\n                  padding: 20px;\r\n                  background-color: #fff;\r\n                  border-radius: 8px;\r\n                  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\r\n                }\r\n                h4 {\r\n                  color: #2d87f0;\r\n                  font-size: 1.5rem;\r\n                  text-align: center;\r\n                  margin-bottom: 40px;\r\n                  margin-top: 20px;\r\n                }\r\n                .result-section {\r\n                  margin-bottom: 20px;\r\n                }\r\n                .result-section p {\r\n                  font-size: 1rem;\r\n                  line-height: 1.6;\r\n                  margin: 10px 0;\r\n                }\r\n                .result-section strong {\r\n                  color: #2d87f0;\r\n                }\r\n                .status {\r\n                  font-weight: bold;\r\n                  padding: 8px 12px;\r\n                  background-color: #2d87f0;\r\n                  color: #fff;\r\n                  border-radius: 5px;\r\n                  display: inline-block;\r\n                }\r\n                .summary-box {\r\n                  padding: 10px;\r\n                  background-color: #fafafa;\r\n                  border: 1px solid #ddd;\r\n                  border-radius: 5px;\r\n                  font-style: italic;\r\n                }\r\n              </style>\r\n            </head>\r\n            <body>\r\n              <div class=\"container\">\r\n                <h4>News Summary Results</h4>\r\n                <div class=\"result-section\">\r\n                  <p ><strong>Title:</strong> ${data.title}</p>\r\n                  <p><strong>Author:</strong> ${data.author}</p>\r\n                </div>\r\n                <div class=\"result-section\">\r\n                  <p><strong>Summary:</strong></p>\r\n                  <div class=\"summary-box\">${data.summary}</div>\r\n                </div>\r\n              </div>\r\n            </body>\r\n          </html>\r\n        `);\r\n      } else {\r\n        alert(data.error || \"Error occurred.\");\r\n      }\r\n\r\n      closeModal();\r\n    } catch (error) {\r\n      console.error(\"Error fetching summary:\", error);\r\n      alert(\"An error occurred while fetching the summary.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section style={{marginTop: \"40px\"}}>\r\n      <div\r\n        className={`${styles.heroContent} ${isModalOpen ? styles.blurred : \"\"}`}\r\n        style={{\r\n          background: \"linear-gradient(to left, rgb(0, 0, 0), rgb(0, 0, 0), rgb(0, 34, 75))\",\r\n          backgroundPosition: \"center\",\r\n          height: \"500px\",\r\n          marginTop: \"-40px\",\r\n          backgroundSize: \"cover\",\r\n          position: \"relative\",\r\n        }}\r\n      >   \r\n        <h9 style={{\r\n          color:\"#ffef3f\",\r\n          marginBottom: \"40px\"\r\n        }}>The Future of Fact Checking is Here\r\n        </h9>\r\n        <div className={styles.typingWrapper}>\r\n          <motion.h1 style={{ color: \"white\", fontSize: \"3rem\", marginTop: \"-10px\", textShadow: \"2px 2px 8px rgba(0, 0, 0, 0.8)\",}}>\r\n            Transforming Misinformation\r\n          </motion.h1>\r\n          <h1 className={styles.typingAnimation} style={{ \r\n            background: \"linear-gradient(to left,rgb(53, 230, 253),rgb(131, 237, 143),rgb(213, 247, 76))\",\r\n            WebkitBackgroundClip: \"text\",\r\n            WebkitTextFillColor: \"transparent\",\r\n            fontSize: \"3rem\", \r\n            marginTop: \"0px\",  \r\n          }}>\r\n            Into Awareness\r\n          </h1>\r\n          <motion.button\r\n            className={`${styles.getStartedBtn} text-white bg-gradient-to-r from-blue-500 via-blue-600 to-blue-700 hover:bg-gradient-to-br focus:ring-4 focus:outline-none focus:ring-blue-300 dark:focus:ring-blue-800 shadow-lg shadow-blue-500/50 dark:shadow-lg dark:shadow-blue-800/80 font-medium`}\r\n            onClick={handleGetStartedClick}\r\n            style={{\r\n              color: \"white\",\r\n              textShadow: \"2px 2px 8px rgba(0, 0, 0, 0.8)\", // Add shadow to the button text\r\n            }}\r\n          >\r\n            Get Started\r\n          </motion.button>\r\n        </div>\r\n      </div>\r\n      {isModalOpen && (\r\n        <div className={styles.modalOverlay} onClick={closeModal}>\r\n          <div\r\n            className={`${styles.modalContent} ${\r\n              isSignedIn ? \"\" : styles.loginWindow\r\n            }`}\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            {isSignedIn ? (\r\n              <div className={styles.threeWindows}>\r\n\r\n{/* Youtube URL Input Section */}\r\n\r\n<div className={styles.window}>\r\n  <div style={{ position: \"relative\" }}>\r\n    <h4 style={{\r\n      fontSize: \"20px\",\r\n      marginTop: \"20px\", \r\n      backgroundColor: \"#3e3e5b\",\r\n      padding: \"10px 15px\",\r\n      marginRight: \"80px\",\r\n      marginLeft: \"80px\",\r\n      borderRadius: \"5px\"\r\n    }}>Video Analysis</h4>\r\n    <input\r\n      type=\"text\"\r\n      placeholder=\"Paste your Video url here\"\r\n    />\r\n    <button className={styles.pasteButton}>Paste</button>\r\n  </div>\r\n  <div className={styles.divider}>\r\n    <span className={styles.orText}>or</span>\r\n  </div>\r\n\r\n  <div className={styles.uploadSection}>\r\n    <div className={styles.fileUploadContainer}>\r\n      <input \r\n        type=\"file\"\r\n        accept=\"video/mp4,video/mkv,video/webm,video/mov/mp3,audio/\"\r\n        onChange={handleFileChange} \r\n        className={styles.fileInput}\r\n      />\r\n    </div>\r\n    <p>or Drop a Video or Audio here (mp3, mp4, mov).</p>\r\n  </div>\r\n  <button\r\n    onClick={() => handleYouTubeAnalysis(file)}\r\n    className={styles.analyzeButton}\r\n  >\r\n    Analyze Video\r\n  </button>\r\n</div>\r\n\r\n{/* Article Input Section */}\r\n\r\n<div className={styles.window}>\r\n  <div style={{ position: \"relative\" }}>\r\n    <h4 style={{\r\n      fontSize: \"20px\",\r\n      marginTop: \"20px\", \r\n      backgroundColor: \"#3e3e5b\",\r\n      padding: \"10px 15px\",\r\n      marginRight: \"80px\",\r\n      marginLeft: \"80px\",\r\n      borderRadius: \"5px\"\r\n    }}>Article Analysis</h4>\r\n    <input\r\n      type=\"text\"\r\n      value={articleURL}\r\n      onChange={(e) => setArticleURL(e.target.value)}\r\n      placeholder=\"Paste your Article URL here\"\r\n    />\r\n    <button className={styles.pasteButton}  onClick={handlePasteClick}>Paste</button>\r\n  </div>\r\n\r\n  <div className={styles.divider}>\r\n    <span className={styles.orText}>or</span>\r\n  </div>\r\n\r\n  <div className={styles.uploadSection}>\r\n    <div className={styles.fileUploadContainer}>\r\n      <input \r\n        type=\"file\"\r\n        accept=\"video/mp4,video/mkv,video/webm,video/mov/mp3,audio/\"\r\n        className={styles.fileInput}\r\n      />\r\n    </div>\r\n    <p>or Drop a Video or Audio here (mp3, mp4, mov).</p>\r\n  </div>\r\n  <button\r\n    onClick= {handleArticleVerification}\r\n    className={styles.analyzeButton}\r\n  >\r\n    Verify Article\r\n  </button>\r\n</div>\r\n\r\n {/* News Summarizer Input Section */}\r\n\r\n              \r\n<div className={styles.window}>\r\n  <div style={{ position: \"relative\" }}>\r\n    <h4 style={{\r\n      fontSize: \"20px\",\r\n      marginTop: \"20px\", \r\n      backgroundColor: \"#3e3e5b\",\r\n      padding: \"10px 15px\",\r\n      marginRight: \"80px\",\r\n      marginLeft: \"80px\",\r\n      borderRadius: \"5px\"\r\n    }}>News Summarizer</h4>\r\n    <input\r\n      type=\"text\"\r\n      value={newsURL}\r\n      onChange={(e) => setNewsURL(e.target.value)}\r\n      placeholder=\"Paste your Article URL here\"\r\n    />\r\n    <button className={styles.pasteButton}  onClick={handlePaste2Click}>Paste</button>\r\n  </div>\r\n\r\n  <div className={styles.divider}>\r\n    <span className={styles.orText}>or</span>\r\n  </div>\r\n\r\n  <div className={styles.uploadSection}>\r\n    <div className={styles.fileUploadContainer}>\r\n      <input \r\n        type=\"file\"\r\n        accept=\"video/mp4,video/mkv,video/webm,video/mov/mp3,audio/\"\r\n        className={styles.fileInput}\r\n      />\r\n    </div>\r\n    <p>or Drop a Video or Audio here (mp3, mp4, mov).</p>\r\n  </div>\r\n  <button\r\n    onClick={handleSummarizeClick}\r\n    className={styles.analyzeButton}\r\n  >\r\n    Summarize\r\n  </button>\r\n</div>\r\n\r\n              </div>\r\n            ) : null}  {/* If not signed in, no modal will be shown */}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HeroSection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}