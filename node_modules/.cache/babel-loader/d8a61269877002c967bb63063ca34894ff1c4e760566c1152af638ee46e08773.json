{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\surya\\\\Desktop\\\\Programs\\\\ReactJS\\\\tthackathon-project-site\\\\src\\\\UserContext.js\",\n  _s = $RefreshSig$();\n// src/UserContext.js\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { onAuthStateChanged } from \"firebase/auth\";\nimport { auth } from \"./firebase\";\n\n// Create the user context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\n\n// UserProvider component to provide the context to your app\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n\n  // Listen to auth state changes\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, currentUser => {\n      setUser(currentUser); // If the user is logged in, set the user state\n    });\n    return unsubscribe; // Cleanup listener\n  }, []);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","onAuthStateChanged","auth","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","unsubscribe","currentUser","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/surya/Desktop/Programs/ReactJS/tthackathon-project-site/src/UserContext.js"],"sourcesContent":["// src/UserContext.js\r\nimport React, { createContext, useState, useEffect } from \"react\";\r\nimport { onAuthStateChanged } from \"firebase/auth\";\r\nimport { auth } from \"./firebase\";\r\n\r\n// Create the user context\r\nexport const UserContext = createContext();\r\n\r\n// UserProvider component to provide the context to your app\r\nexport const UserProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n\r\n  // Listen to auth state changes\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\r\n      setUser(currentUser); // If the user is logged in, set the user state\r\n    });\r\n    return unsubscribe; // Cleanup listener\r\n  }, []);\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,kBAAkB,QAAQ,eAAe;AAClD,SAASC,IAAI,QAAQ,YAAY;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,WAAW,GAAGV,kBAAkB,CAACC,IAAI,EAAGU,WAAW,IAAK;MAC5DF,OAAO,CAACE,WAAW,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC;IACF,OAAOD,WAAW,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACC,WAAW,CAACQ,QAAQ;IAACC,KAAK,EAAE;MAAEL;IAAK,CAAE;IAAAF,QAAA,EACnCA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACV,EAAA,CAhBWF,YAAY;AAAAa,EAAA,GAAZb,YAAY;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}